name: "Build macOS App"

on:
  push:
    branches: [ main ]

jobs:
  build-macos:
    runs-on: macos-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin

      - name: Install dependencies
        run: bun install

      - name: Clean everything and fix
        run: |
          rm -rf src-tauri/icons
          rm -rf src-tauri/target
          mkdir -p src-tauri/icons
          echo -n "iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mP8/5+hHgAHggJ/PchI7wAAAABJRU5ErkJggg==" | base64 -d > src-tauri/icons/icon.png
          cp src-tauri/icons/icon.png src-tauri/icons/32x32.png
          cp src-tauri/icons/icon.png src-tauri/icons/128x128.png
          
          cat > src-tauri/tauri.conf.json << 'EOF'
          {
            "$schema": "../node_modules/@tauri-apps/cli/schema.json",
            "productName": "project-manager-pro",  
            "version": "0.1.0",
            "identifier": "com.projectpulse.app",
            "build": {
              "beforeDevCommand": "bun run dev",
              "beforeBuildCommand": "bun run build", 
              "frontendDist": "../dist",
              "devUrl": "http://localhost:5173"
            },
            "app": {
              "windows": [{"title": "Project Pulse", "width": 1200, "height": 800}],
              "security": {"csp": null}
            },
            "bundle": {
              "active": true,
              "targets": "all"
            }
          }
          EOF

      - name: Build for Apple Silicon Mac  
        run: bun tauri build --target aarch64-apple-darwin

      - name: Find built files
        run: |
          echo "=== מחפש קבצים שנוצרו ==="
          find src-tauri/target -name "*.app" -o -name "*.dmg" -o -name "*.pkg" 2>/dev/null || echo "לא נמצאו קבצי אפליקציה"
          echo "=== תוכן target directory ==="
          ls -la src-tauri/target/ || echo "אין target directory"
          echo "=== תוכן release directory ==="
          ls -la src-tauri/target/*/release/bundle/ 2>/dev/null || echo "אין bundle directory"

      - name: Upload everything we can find
        uses: actions/upload-artifact@v4
        with:
          name: mac-app-files
          path: |
           target/**/*.app
            target/**/*.dmg
            target/**/bundle/
        continue-on-error: true
