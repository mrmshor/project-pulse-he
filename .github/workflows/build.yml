name: "Build and Release"
on:
  push:
    branches: [ main ]
  workflow_dispatch:
jobs:
  build-macos:
    permissions:
      contents: write
    runs-on: macos-14  # Better consistency than macos-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      # Setup Bun instead of Node.js
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: aarch64-apple-darwin,x86_64-apple-darwin
      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'
      # Install dependencies with Bun
      - name: Install dependencies
        run: bun install

      # Fix broken icons - תיקון האייקונים השבורים
      - name: Fix broken icons
        run: |
          # יצירת תיקיית אייקונים אם לא קיימת
          mkdir -p src-tauri/icons
          
          # יצירת PNG שקוף בגודל 1x1 פיקסל (Base64)
          echo 'iVBORw0KGgoAAAANSUhEUgAAAAEAAAABCAYAAAAfFcSJAAAADUlEQVR42mNkYPhfDwAChwGA60e6kgAAAABJRU5ErkJggg==' | base64 -d > src-tauri/icons/32x32.png
          cp src-tauri/icons/32x32.png src-tauri/icons/128x128.png
          cp src-tauri/icons/32x32.png src-tauri/icons/128x128@2x.png
          cp src-tauri/icons/32x32.png src-tauri/icons/icon.png
          cp src-tauri/icons/32x32.png src-tauri/icons/icon.icns
          cp src-tauri/icons/32x32.png src-tauri/icons/icon.ico
          echo "✅ Icons fixed successfully"

      # Debug - Check project before build
      - name: Debug - Check project structure
        run: |
          echo "=== Package.json version ==="
          cat package.json | grep '"version"'
          echo "=== Tauri config ==="
          cat src-tauri/tauri.conf.json | head -20
          echo "=== Rust dependencies ==="
          cat src-tauri/Cargo.toml | grep tauri
          echo "=== Icons status ==="
          ls -la src-tauri/icons/ || echo "No icons directory"

      # Build the app first
      - name: Build Tauri app
        run: |
          bun run build
          cd src-tauri
          cargo tauri build --target universal-apple-darwin

      # Fix artifact names - הכי חשוב!
      - name: Fix artifact names
        run: |
          echo "=== Original files ==="
          find src-tauri/target -name "*.app" -o -name "*.dmg" 2>/dev/null
          
          cd src-tauri/target/universal-apple-darwin/release/bundle
          
          # Fix .app name
          if [ -d "macos/project-manager-pro.app" ]; then
            mv "macos/project-manager-pro.app" "macos/Project Pulse HE.app"
            echo "✅ Renamed .app file"
          fi
          
          # Fix .dmg name  
          if [ -f "dmg/project-manager-pro_1.0.0_universal.dmg" ]; then
            mv "dmg/project-manager-pro_1.0.0_universal.dmg" "dmg/Project Pulse HE_1.0.0_universal.dmg"
            echo "✅ Renamed .dmg file"
          fi
          
          # Create tar.gz files if needed
          if [ -d "macos/Project Pulse HE.app" ]; then
            cd macos
            tar -czf "Project Pulse HE.app.tar.gz" "Project Pulse HE.app"
            echo "✅ Created tar.gz file"
            cd ..
          fi
          
          echo "=== Fixed files ==="
          find . -name "*.app" -o -name "*.dmg" -o -name "*.tar.gz" 2>/dev/null

      # Now use the tauri-action for release (it should find the renamed files)
      - name: Create release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Release configuration
          tagName: "v__VERSION__"
          releaseName: "Project Pulse HE v__VERSION__"
          releaseBody: |
            🚀 **Project Pulse HE - Advanced Project Management System in Hebrew**
            
            ## ✨ Features:
            - 📊 Advanced project and task management
            - 📈 Real-time charts and analytics
            - 🇮🇱 Full Hebrew and RTL support
            - 💬 WhatsApp integration
            - 🎨 Modern and intuitive user interface
            
            ## 📥 Download and Installation:
            - **macOS Universal** (Recommended): `Project Pulse HE_*_universal.dmg`
            
            ## 🛠️ What's new in this version:
            - Fixed build and deployment issues
            - Performance and stability improvements
            - Updated to latest Tauri v2
            - Fixed broken icons issue
            - Fixed artifact naming issues
          releaseDraft: false
          prerelease: false
          # Don't build again, just use existing artifacts
          artifactPaths: |
            src-tauri/target/universal-apple-darwin/release/bundle/dmg/*.dmg
            src-tauri/target/universal-apple-darwin/release/bundle/macos/*.app.tar.gz

      # Debug - Check build results
      - name: Debug - List build outputs
        if: always()
        run: |
          echo "=== Final build outputs ==="
          find src-tauri/target -name "*.app" -o -name "*.dmg" -o -name "*.tar.gz" 2>/dev/null || echo "No files found"
